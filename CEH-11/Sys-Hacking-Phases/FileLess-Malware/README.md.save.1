    Filename: eccouncil-ceh31250-v11-7-5-1-fileless-malware.md
    Show Name: CEHv11 (312-50)
    Topic Name: System Hacking Phases and Attack Techniques - Malware Threats
    Episode Name: Fileless Malware ================================================================================


#EXPLANATION @ the bottom 
Fileless Malware
Objectives:

    Define Fileless Malware
    List and describe Fileless Malware types and infection vectors
    Apply obfuscation to malware to bypass detection

    What is Fileless Malware?
        Takes advantage of system vulnerabilities to inject malicious code into running processes
            Malicious code runs system commands through PowerShell, WMI, bash, etc
                This can be accomplished through...
                    User visiting a malicious website
                        Browser weakness
                    User running a malicious macro
                    Downloading a malicious file

    Types of Fileless Malware
        2 classification systems
# Depending on who your speaking with they could classify the malware by the Evidence left behind or how they got in.
            Evidence
            Entry Point
-        Evidence
            Type I: No file activity performed
		- it's all done in memmory 
            Type II: Indirect file activity
		-
            Type III: Files required
		- Usually means the file isn't malicious

-        Entry Point
            Exploits  ***Definition Below

#	What I mean is it will use something like a vulnerability in your system to be able to execute commands and those commands will be 
#	malicious by nature or will reach out and grab information that will then be interpreted as commands that are malicious by nature. 
#	Right, so all basic malware is just software that does bad stuff. Think of that but instead of writing that to the file system you're 
#	reaching out to a web server maybe and saying, hey give me some information. The information comes across and then it gets interpreted, 
#	IE put into memory injected into a process and executed in those spaces. Whatever that malicious stuff is, I never actually touched disk 
#	with the malicious piece, right? So there you go, that's the idea behind fileless malware

-                File-based
                    Initial entry vector is a file
                    Payload is fileless

So that basically means there gonna be a file but maybe I see an exploitable vulnerability in your system. I utilize that as my entry point. 
That could be the initial vector. That means maybe there is a file that runs but not necessarily, right?  So it's gonna be an exploit to the machine. So maybe something they download exploits machine or use like a remote code exploits to access the machine and therefore it then downloads the fileless malware and runs






-            Hardware
                Malware infects Firmware of...
                    Network Interface Cards
                    Hard Drives
                    CPU
                    USB
                    Hypervisor
-            Execution and Injection
                File-based
                    Simple executable as first stage
                        2nd stage downloaded and launched into memory, or injected into other legit process
-                Macro-based
                    VBA used to create malicious macro
                    Macro is enabled by user
                    Macro runs malicious code
-                Script-based
                    WMI, PowerShell, Bash, Python, javascript, vbscript
-                Disk-based
                    Boot record infection

#    What is the process behind a fileless malware infection?

        Point of Entry
-            Memory exploits
                ie: eternalblue
-            Malicious Website
                ie: malicious script execution, client-side attacks, BEEf 
-            Phishing Mail
                ie: malicious attachment
-            Malicious Document
        Code Execution
-            Script-based
                Powershell, WMIC, bash, VBScript, etc
-            Code Injection
                DLL injection
                Process hollowing
-        Persistence
            Registry entries
            WMI
            Scheduled task
-        Achieving Objectives
            Recon
            Cred grab
            Sensitive data exfil
            Cyber Espionage

#    With so many protections available, how does Fileless malware sneak passed AV?
-        Mixed case
-        Insertion of characters
-            Commas and Semicolons
                Interpreted as whitespace in Windows
-            Carat   " ^ "'s 
                Used for escaping
                Use double carats for more effectiveness
# The carots are read as escape characters. So if you call powershell with the carots, the extra computations to call powershell may slip under
# the logging function. If there was a trap set or alert.
                    cmd.exe /c p^^o^^w^^e^^r^^s^^h^^e^^l^^l.exe  # The harder the AV (Anti Virus) has to work the better chance you have of 
								# slipping by AV. 
#NOTE: Powershell doesn't care about case

-        Custom Environmental Variables
            set a=Power && set b=Shell && %a:~0,5%%b:~0,5%



-        Built-in Environmental Variables
            %CommonProgramFiles% = C:\Program Files\Common Files
       
#	C:\Users\Administrator>  cmd.exe /c "%CommonProgramFiles:~3,1%owershell"
	So we are treating the prompt as an array. We are going to index the 'P' for powershell


-        Double Quotes
            Argument Delimiter
                Used to concatenate
                    cmd.exe /c P""owe""r""Sh""e""ll


#        DEMO
            Parrot: LPORT = 443, HTTP on 8000, serving /home/dlowrie/Tools/Shells/Powershell
            Target: Run script update_script.cmd
==============================================================================================================================================

# How does this work?



















